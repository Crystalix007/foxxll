// -*- mode: c++ -*-
/***************************************************************************
 *  foxxll/config.hpp.in
 *
 *  Template file processed by cmake to set all define switches for this build
 *  according to the cmake build options.
 *
 *  Part of FOXXLL. See http://foxxll.org
 *
 *  Copyright (C) 2012-2013 Timo Bingmann <tb@panthema.net>
 *  Copyright (C) 2018      Manuel Penschuck <foxxll@manuel.jetzt>
 *
 *  Distributed under the Boost Software License, Version 1.0.
 *  (See accompanying file LICENSE_1_0.txt or copy at
 *  http://www.boost.org/LICENSE_1_0.txt)
 **************************************************************************/

#ifndef FOXXLL_CONFIG_HEADER
#define FOXXLL_CONFIG_HEADER

// the STXXL library version variables
#define FOXXLL_VERSION_MAJOR ${FOXXLL_VERSION_MAJOR}
#define FOXXLL_VERSION_MINOR ${FOXXLL_VERSION_MINOR}
#define FOXXLL_VERSION_PATCH ${FOXXLL_VERSION_PATCH}
#define FOXXLL_VERSION_STRING "${FOXXLL_VERSION_STRING}"
#define FOXXLL_VERSION_PHASE "${FOXXLL_VERSION_PHASE}"

// if this is a git repository, add the refspec and commit sha
#cmakedefine FOXXLL_VERSION_GIT_REFSPEC "${FOXXLL_VERSION_GIT_REFSPEC}"
#cmakedefine FOXXLL_VERSION_GIT_SHA1 "${FOXXLL_VERSION_GIT_SHA1}"

#cmakedefine STXXL_DIRECT_IO_OFF ${STXXL_DIRECT_IO_OFF}
// default: 0/1 (platform dependent)
// cmake:   detection of platform and flag
// effect:  disables use of O_DIRECT flag on unsupported platforms

#cmakedefine STXXL_HAVE_MMAP_FILE ${STXXL_HAVE_MMAP_FILE}
// default: 0/1 (platform dependent)
// used in: io/mmap_file.h/cpp
// effect:  enables/disables memory mapped file implementation

#cmakedefine STXXL_HAVE_LINUXAIO_FILE ${STXXL_HAVE_LINUXAIO_FILE}
// default: 0/1 (platform dependent)
// used in: io/linuxaio_file.h/cpp
// effect:  enables/disables Linux AIO file implementation

#cmakedefine STXXL_WINDOWS ${STXXL_WINDOWS}
// default: off
// cmake:   detection of ms windows platform (32- or 64-bit)
// effect:  enables windows-specific api calls (mingw or msvc)

#cmakedefine STXXL_MSVC ${STXXL_MSVC}
// default: off
// cmake:   detection of ms visual c++ via CMake (contains version number)
// effect:  enables msvc-specific headers and macros

#cmakedefine STXXL_HAVE_SYNC_ADD_AND_FETCH ${STXXL_HAVE_SYNC_ADD_AND_FETCH}
// default: off
// cmake:   detection of __sync_add_and_fetch() intrinsic
// effect:  enables use of atomics in counting_ptr

#cmakedefine STXXL_PARALLEL ${STXXL_PARALLEL}
// default: on/off (depends on compiler and platform)
// cmake:   -DUSE_PARALLEL=ON
// effect:  enable parallelized algorithms using OpenMP like multiway_merge and sort

#cmakedefine STXXL_WITH_GNU_PARALLEL ${STXXL_WITH_GNU_PARALLEL}
// default: off
// cmake:   -DUSE_GNU_PARALLEL=ON
// effect:  explicitly enables use of __gnu_parallel algorithms

#cmakedefine STXXL_STD_RANDOM ${STXXL_STD_RANDOM}
// default: off
// cmake:   detection of <random>
// effect:  uses std random generator on windows or (forced on linux)

#cmakedefine STXXL_HAVE_MALLINFO_PROTO ${STXXL_HAVE_MALLINFO_PROTO}
// default: off
// cmake:   detection of mallinfo() function in <malloc.h>
// effect:  used by stxxl_tool/mallinfo for malloc stats

#cmakedefine STXXL_HAVE_MLOCK_PROTO ${STXXL_HAVE_MLOCK_PROTO}
// default: off
// cmake:   detection of mlock() function in <sys/mman.h>
// effect:  used by stxxl_tool/mlock for locking physical pages

#cmakedefine STXXL_WITH_VALGRIND ${STXXL_WITH_VALGRIND}
// default: off
// cmake:   option USE_VALGRIND=ON
// effect:  run all tests with valgrind and pre-initialize some memory buffers

#endif // !FOXXLL_CONFIG_HEADER
